const express = require('express')

const app = express()

app.use(express.json())

/**
 * MÃ©todos HTTP
 * GET: buscar informaÃ§Ã£o
 * POST: criar informaÃ§Ã£o
 * PUT: atualizar informaÃ§Ã£o
 * PATCH: atualizar informaÃ§Ã£o especifica
 * DELETE: deletar informaÃ§Ã£o
 */

 /**
  * Nomeclatura
  * server.metodo('/recurso')
  */


  /**
   * Tipos de Parametro
   * 
   * Query param: Filtros e paginaÃ§Ã£o -> url?name=mateus&old=23
   * Route param: Identificar -> url/1
   * Request body: conteÃºdo, criar ou editar -> url (JSON)
   */

app.get('/projects', (request, response) => {
    
    const { title, owner } = request.query
    console.log(title, owner)

    return response.json([
        'Projeto 1',
        'Projeto 2'
    ])
})

app.post('/projects', (request, response) => {

    const { title, owner } = request.body
    console.log(title, owner)

    return response.json([
        'Projeto 1',
        'Projeto 2',
        'Projeto 3'
    ])
})

app.put('/projects/:id', (request, response) => {

    const { id } = request.params
    console.log(id)

    return response.json([
        'Projeto 4',
        'Projeto 2',
        'Projeto 3'
    ])
})

app.delete('/projects/:id', (request, response) => {
    return response.json([
        'Projeto 4',
        'Projeto 3'
    ])
})

app.listen(3333, () => {
    console.info('ğŸš€ Back-end started')
})